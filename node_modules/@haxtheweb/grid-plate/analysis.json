{
  "schema_version": "1.0.0",
  "classes": [
    {
      "description": "need to make this an object so that HAX can listen for it correctly",
      "summary": "",
      "path": "grid-plate.js",
      "properties": [],
      "methods": [],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 4,
          "column": 0
        },
        "end": {
          "line": 104,
          "column": 1
        }
      },
      "privacy": "public",
      "name": "GridPlateLayoutOptions"
    },
    {
      "description": "`grid-plate`\n`A grid plate based on a layout that manipulates it.`",
      "summary": "",
      "path": "grid-plate.js",
      "properties": [],
      "methods": [
        {
          "name": "render",
          "description": "LitElement render",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 312,
              "column": 2
            },
            "end": {
              "line": 336,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_drop",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 337,
              "column": 2
            },
            "end": {
              "line": 345,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_dragEnter",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 346,
              "column": 2
            },
            "end": {
              "line": 349,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_dragleave",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 350,
              "column": 2
            },
            "end": {
              "line": 353,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "firstUpdated",
          "description": "life cycle",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 360,
              "column": 2
            },
            "end": {
              "line": 385,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "updated",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 585,
              "column": 2
            },
            "end": {
              "line": 646,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "resize",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 647,
              "column": 2
            },
            "end": {
              "line": 649,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getColumnWidths",
          "description": "gets the column widths based on selected layout and current responsive width",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 659,
              "column": 2
            },
            "end": {
              "line": 692,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "responsiveSize",
              "defaultValue": "\"sm\""
            },
            {
              "name": "layout",
              "defaultValue": "\"1-1\""
            },
            {
              "name": "layouts"
            },
            {
              "name": "disableResponsive"
            }
          ],
          "return": {
            "type": "object",
            "desc": "an object with a layout's column sizes at the current responsive width"
          }
        },
        {
          "name": "_getColumnWidth",
          "description": "gets a given column's current width based on layout and current responsive width",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 701,
              "column": 2
            },
            "end": {
              "line": 705,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "column"
            },
            {
              "name": "__columnWidths"
            }
          ],
          "return": {
            "type": "string",
            "desc": "a given column's current width based on layout and current responsive width"
          }
        },
        {
          "name": "_getColumns",
          "description": "gets a given column's current width based on layout and current responsive width",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 712,
              "column": 2
            },
            "end": {
              "line": 714,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "__columnWidths"
            }
          ],
          "return": {
            "type": "number",
            "desc": "the number of columns in this layout"
          }
        },
        {
          "name": "haxactiveElementChanged",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 715,
              "column": 2
            },
            "end": {
              "line": 715,
              "column": 37
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "el"
            },
            {
              "name": "val"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        },
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 111,
          "column": 0
        },
        "end": {
          "line": 716,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "GridPlate"
    }
  ]
}
