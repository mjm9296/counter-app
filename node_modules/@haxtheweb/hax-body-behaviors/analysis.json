{
  "schema_version": "1.0.0",
  "functions": [
    {
      "name": "HAXElement",
      "description": "Super class element partial. This mixes the HAXWiring capabilities into the element itself.\nUse this in instances where you want direct access to all the functions in the element itself\n ",
      "summary": "",
      "sourceRange": {
        "file": "lib/HAXWiring.js",
        "start": {
          "line": 875,
          "column": 26
        },
        "end": {
          "line": 1005,
          "column": 1
        }
      },
      "privacy": "public",
      "params": []
    }
  ],
  "classes": [
    {
      "description": "Object to validate HAX schema. Can be used in and out of element contexts",
      "summary": "",
      "path": "lib/HAXWiring.js",
      "properties": [],
      "methods": [],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 219,
          "column": 7
        },
        "end": {
          "line": 870,
          "column": 1
        }
      },
      "privacy": "public",
      "name": "HAXWiring"
    },
    {
      "description": "",
      "summary": "",
      "path": "lib/HAXWiring.js",
      "properties": [],
      "methods": [
        {
          "name": "designSystemHAXProperties",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 889,
              "column": 4
            },
            "end": {
              "line": 893,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "props",
              "type": "Object",
              "description": "HAX properties being set for the schema for an element"
            },
            {
              "name": "tag",
              "type": "String",
              "description": "tagName of the element"
            }
          ],
          "return": {
            "desc": "props object"
          }
        },
        {
          "name": "setHaxProperties",
          "description": "Setter to bridge private haxProperties setter.\nThis is to then be implemented by the ready state of whatever is supplying the\nproperties in order to be able to bubble up the properties for a tag.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 909,
              "column": 4
            },
            "end": {
              "line": 929,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "props"
            },
            {
              "name": "tag",
              "defaultValue": "\"\""
            },
            {
              "name": "context",
              "defaultValue": "this"
            }
          ]
        },
        {
          "name": "disconnectedCallback",
          "description": "Clean up",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 933,
              "column": 4
            },
            "end": {
              "line": 938,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setup",
          "description": "Setter to bridge private haxProperties setter.\nThis is to then be implemented by the ready state of whatever is supplying the\nproperties in order to be able to bubble up the properties for a tag.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 944,
              "column": 4
            },
            "end": {
              "line": 946,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "props"
            },
            {
              "name": "tag",
              "defaultValue": "\"\""
            },
            {
              "name": "context",
              "defaultValue": "this"
            }
          ]
        },
        {
          "name": "_haxStoreReady",
          "description": "Private function to fire off props when ready",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 950,
              "column": 4
            },
            "end": {
              "line": 952,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "validateSetting",
          "description": "Validate settings object.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 956,
              "column": 4
            },
            "end": {
              "line": 958,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "setting"
            }
          ]
        },
        {
          "name": "getHaxProperties",
          "description": "Match convention for set.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 962,
              "column": 4
            },
            "end": {
              "line": 964,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "getHaxJSONSchema",
          "description": "Convert haxProperties structure to a simple json-schema.\nThis allows for complex form building systems based on this data.\ntype is configure or advanced",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 970,
              "column": 4
            },
            "end": {
              "line": 972,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            },
            {
              "name": "haxProperties"
            },
            {
              "name": "target",
              "defaultValue": "this"
            }
          ]
        },
        {
          "name": "postProcessgetHaxJSONSchema",
          "description": "Default postProcessgetHaxJSONSchema to be overridden.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 976,
              "column": 4
            },
            "end": {
              "line": 978,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "schema"
            }
          ]
        },
        {
          "name": "_getHaxJSONSchemaProperty",
          "description": "Internal helper for getHaxJSONSchema to buiild the properties object\ncorrectly with support for recursive nesting thx to objects / arrays.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 983,
              "column": 4
            },
            "end": {
              "line": 985,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "settings"
            }
          ]
        },
        {
          "name": "getHaxJSONSchemaType",
          "description": "Convert input method to schedma type",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 989,
              "column": 4
            },
            "end": {
              "line": 991,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "inputMethod"
            }
          ]
        },
        {
          "name": "validHAXPropertyInputMethod",
          "description": "List valid input methods.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 995,
              "column": 4
            },
            "end": {
              "line": 997,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "prototypeHaxProperties",
          "description": "Return a haxProperties prototype / example structure",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1001,
              "column": 4
            },
            "end": {
              "line": 1003,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 876,
          "column": 9
        },
        "end": {
          "line": 1004,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "SuperClass"
    }
  ]
}
